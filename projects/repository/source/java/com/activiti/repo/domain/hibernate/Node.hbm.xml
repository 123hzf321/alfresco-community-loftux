<?xml version='1.0' encoding='UTF-8'?>

<!DOCTYPE hibernate-mapping PUBLIC
    '-//Hibernate/Hibernate Mapping DTD 3.0//EN' 
    'http://hibernate.sourceforge.net/hibernate-mapping-3.0.dtd'>

<hibernate-mapping>
   <class
         name="com.activiti.repo.domain.hibernate.NodeImpl"
         proxy="com.activiti.repo.domain.Node"
         table="node"
         dynamic-update="false"
         dynamic-insert="false"
         select-before-update="false"
         optimistic-lock="version"
         discriminator-value="GENERIC" >
      <id
            name="id"
            column="id"
            type="long" >
         <generator class="increment" />
      </id>
      <discriminator
            column="auto_type"
            type="string"
            length="18" />
      <property name="guid" not-null="true" />
      <property name="type" not-null="true" />
      <map
            name="properties"
            table="node_properties"
            lazy="true"
            sort="unsorted"
            inverse="false"
            cascade="all" >
         <key column="auto_id" />  <!-- the map must be linked to the Node by the Node id -->
         <index column="property_name" type="string" />
         <element column="property_value" type="string" />  <!-- a map of property values keyed by property name -->
      </map>
      <!-- forward assoc to workspace -->
      <many-to-one
            name="workspace"
            class="com.activiti.repo.domain.hibernate.WorkspaceImpl"
            not-null="true" >
         <column name="workspace_id" />
      </many-to-one>
      <!-- inverse assoc to parent childassocs -->
      <set
            name="parentAssocs"
            inverse="true" >
         <key column="child_id" />
         <one-to-many class="com.activiti.repo.domain.hibernate.ChildAssocImpl" />
      </set>
   </class>
   
   <subclass
         name="com.activiti.repo.domain.hibernate.ReferenceNodeImpl"
         proxy="com.activiti.repo.domain.ReferenceNode"
         extends="com.activiti.repo.domain.hibernate.NodeImpl"
         discriminator-value="REFERENCE" >
      <property name="referencedPath" not-null="true" />
   </subclass>

   <subclass
         name="com.activiti.repo.domain.hibernate.RealNodeImpl"
         proxy="com.activiti.repo.domain.RealNode"
         extends="com.activiti.repo.domain.hibernate.NodeImpl"
         discriminator-value="REAL" >
   </subclass>

   <subclass
         name="com.activiti.repo.domain.hibernate.ContentNodeImpl"
         proxy="com.activiti.repo.domain.ContentNode"
         extends="com.activiti.repo.domain.hibernate.RealNodeImpl"
         discriminator-value="CONTENT" >
   </subclass>

   <subclass
         name="com.activiti.repo.domain.hibernate.ContainerNodeImpl"
         proxy="com.activiti.repo.domain.ContainerNode"
         extends="com.activiti.repo.domain.hibernate.RealNodeImpl"
         discriminator-value="CONTAINER" >
      <!-- inverse assoc to child childassocs -->
      <set
            name="childAssocs"
            inverse="true" >
         <key column="parent_id" />
         <one-to-many class="com.activiti.repo.domain.hibernate.ChildAssocImpl" />
      </set>
   </subclass>

   <class
         name="com.activiti.repo.domain.hibernate.ChildAssocImpl"
         proxy="com.activiti.repo.domain.ChildAssoc"
         table="child_assoc" >
      <id
            name="id"
            column="id"
            type="long" >
         <generator class="increment" />
      </id>
      <property name="name" />
      <property name="isPrimary" />
      <!-- forward assoc to parent node -->
      <many-to-one
            name="parent"
            class="com.activiti.repo.domain.hibernate.ContainerNodeImpl"
            column="parent_id"
            not-null="true" />
      <!-- forward assoc to child node -->
      <many-to-one
            name="child"
            class="com.activiti.repo.domain.hibernate.NodeImpl"
            column="child_id"
            not-null="true" />
   </class>

   <query name="node.FindNodeInStore" >
      select
         node
      from
         com.activiti.repo.domain.hibernate.NodeImpl node
         join node.store store
      where
         node.guid = :nodeGuid and
         store.protocol = :storeProtocol and
         store.identifier = :storeIdentifier
   </query>

</hibernate-mapping>
