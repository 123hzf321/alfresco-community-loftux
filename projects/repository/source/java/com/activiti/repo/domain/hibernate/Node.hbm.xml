<?xml version='1.0' encoding='UTF-8'?>

<!DOCTYPE hibernate-mapping PUBLIC
    '-//Hibernate/Hibernate Mapping DTD 3.0//EN' 
    'http://hibernate.sourceforge.net/hibernate-mapping-3.0.dtd'>

<hibernate-mapping>
   <class
         name="com.activiti.repo.domain.hibernate.NodeImpl"
         proxy="com.activiti.repo.domain.Node"
         table="node"
         dynamic-update="false"
         dynamic-insert="false"
         select-before-update="false"
         optimistic-lock="version"
         discriminator-value="GENERIC" >
      <!-- composite PK -->
      <composite-id name="key" class="com.activiti.repo.domain.NodeKey">
         <key-property name="protocol" />
         <key-property name="identifier" />
         <key-property name="guid"/>
      </composite-id>
      <discriminator
            column="auto_type"
            type="string"
            length="18" />
      <property name="type" not-null="true" length="50"/>
      <map
            name="properties"
            table="node_properties"
            lazy="true"
            sort="unsorted"
            inverse="false"
            cascade="all" >
         <key>
            <column name="protocol" />
            <column name="identifier" />
            <column name="guid" />
         </key>
         <index column="property_name" type="string" />
         <element column="property_value" type="string" />
      </map>
      <!-- forward assoc to store -->
      <many-to-one
            name="store"
            class="com.activiti.repo.domain.hibernate.StoreImpl"
            not-null="true"
            insert="false"
            update="false" >
         <column name="protocol" />
         <column name="identifier" />
      </many-to-one>
      <!-- inverse assoc to parent childassocs -->
      <set
            name="parentAssocs"
            inverse="true" 
            cascade="delete" >
         <key>
            <column name="child_protocol" />
            <column name="child_identifier" />
            <column name="child_guid" />
         </key>
         <one-to-many class="com.activiti.repo.domain.hibernate.ChildAssocImpl" />
      </set>
   </class>
   
   <subclass
         name="com.activiti.repo.domain.hibernate.ReferenceNodeImpl"
         proxy="com.activiti.repo.domain.ReferenceNode"
         extends="com.activiti.repo.domain.hibernate.NodeImpl"
         discriminator-value="REFERENCE" >
      <property name="referencedPath" not-null="true" />
   </subclass>

   <subclass
         name="com.activiti.repo.domain.hibernate.RealNodeImpl"
         proxy="com.activiti.repo.domain.RealNode"
         extends="com.activiti.repo.domain.hibernate.NodeImpl"
         discriminator-value="REAL" >
   </subclass>

   <subclass
         name="com.activiti.repo.domain.hibernate.ContentNodeImpl"
         proxy="com.activiti.repo.domain.ContentNode"
         extends="com.activiti.repo.domain.hibernate.RealNodeImpl"
         discriminator-value="CONTENT" >
   </subclass>

   <subclass
         name="com.activiti.repo.domain.hibernate.ContainerNodeImpl"
         proxy="com.activiti.repo.domain.ContainerNode"
         extends="com.activiti.repo.domain.hibernate.RealNodeImpl"
         discriminator-value="CONTAINER" >
      <!-- inverse assoc to child childassocs -->
      <set
            name="childAssocs"
            inverse="true" 
            cascade="delete" >
         <key>
            <column name="parent_protocol" />
            <column name="parent_identifier" />
            <column name="parent_guid" />
         </key>
         <one-to-many class="com.activiti.repo.domain.hibernate.ChildAssocImpl" />
      </set>
   </subclass>

   <class
         name="com.activiti.repo.domain.hibernate.ChildAssocImpl"
         proxy="com.activiti.repo.domain.ChildAssoc"
         table="child_assoc" >
      <id
            name="id"
            column="id"
            type="long" >
         <generator class="increment" />
      </id>
      <property name="name" />
      <property name="isPrimary" />
      <!-- forward assoc to parent node -->
      <many-to-one
            name="parent"
            class="com.activiti.repo.domain.hibernate.ContainerNodeImpl"
            not-null="true" >
         <column name="parent_protocol" />
         <column name="parent_identifier" />
         <column name="parent_guid" />
      </many-to-one>
      <!-- forward assoc to child node -->
      <many-to-one
            name="child"
            class="com.activiti.repo.domain.hibernate.NodeImpl"
            not-null="true" >
         <column name="child_protocol" />
         <column name="child_identifier" />
         <column name="child_guid" />
      </many-to-one>
   </class>
   
<!--
   <query name="node.GetChildAssocs">
      select
         assoc
      from
         com.activiti.repo.domain.hibernate.ContainerNodeImpl as parent
         join parent.childAssocs as assoc
         join assoc.child as child
      where
         parent.key = ? and
         child.key = ?
   </query>
-->

</hibernate-mapping>
